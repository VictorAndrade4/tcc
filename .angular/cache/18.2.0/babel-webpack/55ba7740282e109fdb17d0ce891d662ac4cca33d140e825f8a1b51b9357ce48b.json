{"ast":null,"code":"import _asyncToGenerator from \"/mnt/c/Users/Victor/Documents/dev/tcc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { of, Subject } from 'rxjs';\nimport { BaseService } from '../utils/base.service';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService extends BaseService {\n    constructor(httpClient) {\n      super(httpClient);\n      this.selectedState = '';\n      this.selectedCity = '';\n      this.state$ = new Subject();\n      this.city$ = new Subject();\n    }\n    getStateObservable() {\n      return this.state$.asObservable();\n    }\n    getCityObservable() {\n      return this.city$.asObservable();\n    }\n    set city(newCity) {\n      this.selectedCity = newCity;\n      this.city$.next(this.selectedCity);\n    }\n    set state(state) {\n      this.selectedState = state;\n      this.state$.next(this.selectedState);\n    }\n    getCityOptions(uf) {\n      if (!uf) return of(['Escolha o Estado']);\n      return this.get(`/cobertura/cities?uf=${uf}`);\n    }\n    getAreasFromCity() {\n      return this.get(`/cobertura/areas?uf=${this.selectedState}&city=${this.selectedCity}`).toPromise();\n    }\n    getKmlFileUrl() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const kmlFileName = yield _this.get(`/kmlFile?uf=${_this.selectedState}&city=${_this.selectedCity}`).toPromise();\n        console.log(environment.kmlUrl + kmlFileName);\n        return environment.kmlUrl + kmlFileName;\n      })();\n    }\n    postForFuzzyAlgorithmResults(input) {\n      return this.post('/cobertura', input);\n    }\n    static #_ = this.ɵfac = function DataService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DataService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DataService,\n      factory: DataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}